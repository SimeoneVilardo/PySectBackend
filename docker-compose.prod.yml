---

# Default compose file for development and production.
# Should be used directly in development.
# Automatically loads `docker-compose.override.yml` if it exists.
# No extra steps required.
# Should be used together with `docker/docker-compose.prod.yml`
# in production.

version: "3.9"
services:

  celery-worker:
    image: "pysect-backend-celery-worker:dev"
    container_name: pysect-backend-celery-worker
    command: celery -A server worker -l INFO
    volumes:
      - .:/code
    build:
      context: .
      dockerfile: ./docker/celery/Dockerfile
    env_file:
      - ./docker/config/.env
    depends_on:
      - web
    networks:
      - nginx-reverse-proxy-net

  redis:
    image: redis:latest
    container_name: pysect-backend-redis
    networks:
      - nginx-reverse-proxy-net

  db:
    image: "postgres:13.10-alpine"
    container_name: pysect-backend-db
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - nginx-reverse-proxy-net
    ports:
      # We only bind ports directly in development
      - "9001:5432"
    env_file:
      - ./docker/config/.env

  web:
    image: "pysect-backend:dev"
    container_name: pysect-backend-web
    ports:
      # We only bind ports directly in development:
      - "9000:8000"
    #platform: linux/amd64
    build:
      target: builder_image
      context: .
      dockerfile: ./docker/django/Dockerfile
      args:
        DJANGO_ENV: production
        # See: https://github.com/wemake-services/wemake-django-template/issues/1518
        USER_ID: ${UID:-1000}
        USER_GID: ${GID:-1000}
      cache_from:
        - "pysect-backend:dev"
        - "pysect-backend:latest"
        - "*"
    volumes:
      - django-static:/var/www/django/static
      # We should only mount source code in development:
      - .:/code
    depends_on:
      - db
      - redis
    networks:
      - nginx-reverse-proxy-net
    env_file:
      - ./docker/config/.env
    environment:
      VIRTUAL_HOST: api.pysect.letz.dev
      VIRTUAL_PATH: /api
      VIRTUAL_PORT: 8000
    command: ./docker/django/local_run.sh

networks:
  # Network for your internals, use it by default:
  nginx-reverse-proxy-net:
    external: true

volumes:
  pgdata:
  django-static:
